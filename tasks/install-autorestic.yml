---
- name: "Get stat of {{ autorestic_install_path }}"
  ansible.builtin.stat:
    path: "{{ autorestic_install_path }}"
  register: autorestic_binary_register

- name: Get autorestic version
  ansible.builtin.shell: |
    set -o pipefail
    {{ autorestic_binary_register.stat.path }} --version | cut -f3 -d ' '
  args:
    executable: /bin/bash
  register: autorestic_version_register
  changed_when: False
  when: autorestic_binary_register.stat.exists

- name: Install autorestic
  block:
    - name: "Make sure {{ autorestic_download_directory }} does not exist"
      ansible.builtin.file:
        path: "{{ autorestic_download_directory }}"
        state: absent

    - name: "Create {{ autorestic_download_directory }}"
      ansible.builtin.file:
        path: "{{ autorestic_download_directory }}"
        state: directory
        mode: 0755

    - name: Download autorestic
      ansible.builtin.get_url:
        url: "{{ autorestic_download_url }}"
        dest: "{{ autorestic_download_directory }}"
        checksum: "{{ autorestic_download_checksum | default(omit) }}"
        mode: 0644

    - name: Extract autorestic
      ansible.builtin.command:
        chdir: "{{ autorestic_download_directory }}"
        cmd: "bzip2 -d {{ autorestic_download_zip }}"
        creates: "{{ autorestic_download_directory }}/{{ autorestic_download_binary }}"

    - name: Copy autorestic binary to install directory
      ansible.builtin.copy:
        src: "{{ autorestic_download_directory }}/{{ autorestic_download_binary }}"
        dest: "{{ autorestic_install_path }}"
        mode: 0755
        remote_src: true

  when: not autorestic_binary_register.stat.exists or (autorestic_version_register.stdout | default('')) != autorestic_download_version
  become: true
