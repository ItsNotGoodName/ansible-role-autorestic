---
- name: "Get stat of {{ autorestic_restic_install_path }}"
  ansible.builtin.stat:
    path: "{{ autorestic_restic_install_path }}"
  register: autorestic_restic_binary_register

- name: Get restic version
  ansible.builtin.shell: |
    set -o pipefail
    {{ autorestic_restic_install_path }} version | cut -f2 -d ' ' 
  args:
    executable: /bin/bash
  register: autorestic_restic_version_register
  changed_when: false
  when: autorestic_restic_binary_register.stat.exists

- name: Install restic
  block:
    - name: "Make sure {{ autorestic_restic_download_directory }} does not exist"
      ansible.builtin.file:
        path: "{{ autorestic_restic_download_directory }}"
        state: absent

    - name: "Create {{ autorestic_restic_download_directory }}"
      ansible.builtin.file:
        path: "{{ autorestic_restic_download_directory }}"
        state: directory
        mode: 0755

    - name: Download restic
      ansible.builtin.get_url:
        url: "{{ autorestic_restic_download_url }}"
        dest: "{{ autorestic_restic_download_directory }}"
        checksum: "{{ autorestic_restic_download_checksum | default(omit) }}"
        mode: 0644

    - name: Extract restic
      ansible.builtin.command:
        chdir: "{{ autorestic_restic_download_directory }}"
        cmd: "bzip2 -d {{ autorestic_restic_download_zip }}"
        creates: "{{ autorestic_restic_download_directory }}/{{ autorestic_restic_download_binary }}"

    - name: Copy restic binary to install directory
      ansible.builtin.copy:
        src: "{{ autorestic_restic_download_directory }}/{{ autorestic_restic_download_binary }}"
        dest: "{{ autorestic_restic_install_path }}"
        mode: 0755
        remote_src: true

  when: not autorestic_restic_binary_register.stat.exists or (autorestic_restic_version_register.stdout | default('')) != autorestic_restic_download_version
  become: true
